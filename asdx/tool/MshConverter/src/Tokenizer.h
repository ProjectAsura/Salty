//-------------------------------------------------------------------------------
// File : tokenizer.h
// Desc : Asura Tokenizer Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------

#ifndef __TOKENIZER_H__
#define __TOKENIZER_H__

//-------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------
#include <string>


/////////////////////////////////////////////////////////////////////////////////
// Tokenizer class
/////////////////////////////////////////////////////////////////////////////////
class Tokenizer
{
    //===========================================================================
    // list of friend classes and methods
    //===========================================================================
    /* NOTHING */

private:
    //===========================================================================
    // private variables
    //===========================================================================
    std::string     m_Separator;
    std::string     m_Splitter;
    char*           m_pBuffer;
    char*           m_pToken;

    //===========================================================================
    // private methods
    //===========================================================================
    /* NOTHING */

protected:
    //===========================================================================
    // protected variables
    //===========================================================================
    /* NOTHING */

    //===========================================================================
    // protected methods
    //===========================================================================
    /* NOTHING */

public:
    //===========================================================================
    // public variables
    //===========================================================================
    /* NOTHING */

    //===========================================================================
    // public methods
    //===========================================================================

    //---------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------
    Tokenizer( unsigned int bufferSize );

    //---------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------
    virtual ~Tokenizer();

    //---------------------------------------------------------------------------
    //! @brief      区切り文字を設定します.
    //---------------------------------------------------------------------------
    void    SetSeparator( const char* pSeparator );

    //---------------------------------------------------------------------------
    //! @brief      切り出し文字を設定します.
    //---------------------------------------------------------------------------
    void    SetSplitter ( const char* pSplitter );

    //---------------------------------------------------------------------------
    //! @brief      バッファへのポインタを設定します.
    //---------------------------------------------------------------------------
    void    SetBuffer   ( char* pBuffer );

    //---------------------------------------------------------------------------
    //! @brief      メモリ解放を行います.
    //---------------------------------------------------------------------------
    void    Release();

    //---------------------------------------------------------------------------
    //! @brief      トークンを取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    void    GetToken( bool isAdvance );

    //---------------------------------------------------------------------------
    //! @brief      次のトークンを取得します.
    //---------------------------------------------------------------------------
    void    Next();

    //---------------------------------------------------------------------------
    //! @brief      指定された文字列とトークンが一致しているか判定します.
    //---------------------------------------------------------------------------
    bool    Check( const char* pToken );

    //---------------------------------------------------------------------------
    //! @brief      終了判定を行います.
    //---------------------------------------------------------------------------
    bool    IsEnd();

    //---------------------------------------------------------------------------
    //! @brief      トークンをchar*型として取得します.
    //---------------------------------------------------------------------------
    char*   GetAsChar();

    //---------------------------------------------------------------------------
    //! @brief      トークンをf64型として取得します.
    //---------------------------------------------------------------------------
    double     GetAsF64();

    //---------------------------------------------------------------------------
    //! @brief      トークンをf32型として取得します.
    //---------------------------------------------------------------------------
    float     GetAsF32();

    //---------------------------------------------------------------------------
    //! @brief      トークンをs32型として取得します.
    //---------------------------------------------------------------------------
    int     GetAsS32();

    //---------------------------------------------------------------------------
    //! @brief      トークンをu32型として取得します.
    //---------------------------------------------------------------------------
    unsigned int     GetAsU32();

    //---------------------------------------------------------------------------
    //! @brief      次のトークンをchar*型として取得します.
    //---------------------------------------------------------------------------
    char*   GetNextAsChar();

    //---------------------------------------------------------------------------
    //! @brief      次のトークンをf64型として取得します.
    //---------------------------------------------------------------------------
    double     GetNextAsF64 ();

    //---------------------------------------------------------------------------
    //! @brief      次のトークンをf32型として取得します.
    //---------------------------------------------------------------------------
    float     GetNextAsF32 ();

    //---------------------------------------------------------------------------
    //! @brief      次のトークンをs32型として取得します.
    //---------------------------------------------------------------------------
    int     GetNextAsS32 ();

    //---------------------------------------------------------------------------
    //! @brief      次のトークンをu32型として取得します.
    //---------------------------------------------------------------------------
    unsigned int     GetNextAsU32 ();

    //---------------------------------------------------------------------------
    //! @brief      トークンをchar*型として取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    char*   GetTokenAsChar( bool isAdvance );

    //---------------------------------------------------------------------------
    //! @brief      トークンをf64型として取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    double     GetTokenAsF64( bool isAdvance );

    //---------------------------------------------------------------------------
    //! @brief      トークンをf32型として取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    float     GetTokenAsF32( bool isAdvance );

    //---------------------------------------------------------------------------
    //! @brief      トークンをs32型として取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    int     GetTokenAsS32( bool isAdvance );

    //---------------------------------------------------------------------------
    //! @brief      トークンをu32型として取得します.
    //! @param [in]     isAdvance       バッファポインタを進める場合はtrueを指定します.
    //---------------------------------------------------------------------------
    unsigned int     GetTokenAsU32( bool isAdvance );
};

#endif//__TOKENIZER_H__