//----------------------------------------------------------------------------------
// File : s3d_material.
// Desc : Material Module.
// Copyright(c) Project Asura. All right reserved.
//----------------------------------------------------------------------------------

#ifndef __S3D_MATERIAL_H__
#define __S3D_MATERIAL_H__

//----------------------------------------------------------------------------------
// Includes
//----------------------------------------------------------------------------------
#include <s3d_shape.h>
#include <s3d_color3.h>
#include <s3d_rand.h>


namespace s3d {

/////////////////////////////////////////////////////////////////////////////////////
// ShadeArg structure
/////////////////////////////////////////////////////////////////////////////////////
struct ShadeArg
{
    Vector3     input;          //!< 入射方向.
    Vector3     normal;         //!< 法線ベクトル.
    Vector3     output;         //!< 出射方向.
    Random      random;         //!< 乱数.
    f64         probability;    //!< 確率.
};


/////////////////////////////////////////////////////////////////////////////////////
// IMaterial interface
/////////////////////////////////////////////////////////////////////////////////////
struct IMaterial
{
public:
    virtual f64     GetThreshold() const = 0;
    virtual Color3  Le( ShadeArg& ) = 0;
    virtual Color3  Wr( ShadeArg& ) = 0;
#if S3D_DEBUG
    virtual Color3  GetColor() const = 0;
#endif//S3D_DEBUG
};


/////////////////////////////////////////////////////////////////////////////////////
// Matte class
// (Lambert Model)
/////////////////////////////////////////////////////////////////////////////////////
class Matte : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Matte( const Color3&, const Color3& = Color3(0.0, 0.0, 0.0) );
    Matte( const Matte& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

#if S3D_DEBUG
    Color3   GetColor() const;
#endif//S3D_DEBUG

protected:
    //==============================================================================
    // protected varaibles.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Diffuse;
    Color3  m_Emissive;
    f64     m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Clay class
// (Oren-Nayer Model)
/////////////////////////////////////////////////////////////////////////////////////
class Clay : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Clay( const Color3&, const f64, const Color3& = Color3( 0.0, 0.0, 0.0 ) );
    Clay( const Clay& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

#if S3D_DEBUG
    Color3   GetColor() const;
#endif//S3D_DEBUG

protected:
    //==============================================================================
    // protected varaibles.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Diffuse;
    Color3  m_Emissive;
    f64     m_Roughness;
    f64     m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Plastic class
// (Phong Model)
/////////////////////////////////////////////////////////////////////////////////////
class Plastic : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods
    //==============================================================================
    Plastic( const Color3&, const f64, IMaterial* );
    Plastic( const Plastic& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3      m_Color;
    f64         m_Power;
    IMaterial*  m_pDiffuse;
    f64         m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Metal class
// (Cook-Torrance Model)
/////////////////////////////////////////////////////////////////////////////////////
class Metal : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Metal( const Color3&, const f64, const f64, IMaterial* );
    Metal( const Metal& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3      m_Color;
    f64         m_Roughness;
    f64         m_Fresnel;
    IMaterial*  m_pDiffuse;
    f64         m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


////////////////////////////////////////////////////////////////////////////////////
// Mirror class
////////////////////////////////////////////////////////////////////////////////////
class Mirror : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Mirror( const Color3&, const Color3& = Color3(0.0, 0.0, 0.0) );
    Mirror( const Mirror& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

#if S3D_DEBUG
    Color3   GetColor() const;
#endif//S3D_DEBUG

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Specular;
    Color3  m_Emissive;
    f64     m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


////////////////////////////////////////////////////////////////////////////////////
// Glass class
////////////////////////////////////////////////////////////////////////////////////
class Glass : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NONTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Glass( const Color3&, const f64, const Color3& = Color3(0.0, 0.0, 0.0) );
    Glass( const Glass& );

    f64     GetThreshold() const;
    Color3  Le( ShadeArg& );
    Color3  Wr( ShadeArg& );

#if S3D_DEBUG
    Color3   GetColor() const;
#endif//S3D_DEBUG

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Specular;
    Color3  m_Emissive;
    f64     m_Refractivity;
    f64     m_Threshold;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


} // namespace s3d

#endif//__S3D_MATERIAL_H__
