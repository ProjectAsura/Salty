//-----------------------------------------------------------------------------------------
// File : s2_Timer.h
// Desc : Timer Module.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------------------

#ifndef __S2_TIMER_H__
#define __S2_TIMER_H__

//-----------------------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------------------
#include <Windows.h>


/////////////////////////////////////////////////////////////////////////////////////////////
// Timer class
/////////////////////////////////////////////////////////////////////////////////////////////
class Timer
{
    //=======================================================================================
    // list of friend classes and methods.
    //=======================================================================================
    /* NOTHING */

private:
    //=======================================================================================
    // private variables.
    //=======================================================================================
    LONGLONG    m_TicksPerSec;          //!< 1秒あたりのタイマー刻み数.
    LONGLONG    m_StartTime;            //!< 開始時間.
    LONGLONG    m_EndTime;              //!< 停止時間.
    double      m_InvTicksPerSec;       //!< 1タイマー刻み数当たりの秒数.

    //=======================================================================================
    // private methods.
    //=======================================================================================
    /* NOTHING */

protected:
    //=======================================================================================
    // protected variables.
    //=======================================================================================
    /* NOTHING */

    //=======================================================================================
    // protected methods.
    //=======================================================================================
    /* NOTHING */

public:
    //=======================================================================================
    // public variables.
    //=======================================================================================
    /* NOTHING */

    //=======================================================================================
    // public methods.
    //=======================================================================================

    //---------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------
    Timer()
    : m_StartTime( 0 )
    , m_EndTime  ( 0 )
    {
        LARGE_INTEGER qwTime = { 0 };
        QueryPerformanceFrequency( &qwTime );
        m_TicksPerSec = qwTime.QuadPart;
        m_InvTicksPerSec = 1.0 / static_cast<double>( m_TicksPerSec );
    }

    //---------------------------------------------------------------------------------------
    //! @brief      計測を開始します.
    //---------------------------------------------------------------------------------------
    inline void Start()
    {
        LARGE_INTEGER qwTime = { 0 };
        QueryPerformanceCounter( &qwTime );
        m_StartTime = qwTime.QuadPart;
    }

    //---------------------------------------------------------------------------------------
    //! @brief      計測を終了します.
    //---------------------------------------------------------------------------------------
    inline void End()
    {
        LARGE_INTEGER qwTime = { 0 };
        QueryPerformanceCounter( &qwTime );
        m_EndTime = qwTime.QuadPart;
    }

    //---------------------------------------------------------------------------------------
    //! @brief      経過時間を秒単位で取得します.
    //!
    //! @return     経過時間を秒単位で返却します.
    //---------------------------------------------------------------------------------------
    inline double GetElapsedTimeSec()
    {
         return ( m_EndTime - m_StartTime ) * m_InvTicksPerSec;
    }

    //---------------------------------------------------------------------------------------
    //! @brief      経過時間をミリ秒単位で取得します.
    //!
    //! @return     経過時間をミリ秒単位で返却します.
    //---------------------------------------------------------------------------------------
    inline double GetElapsedTimeMsec()
    {
        return ( m_EndTime - m_StartTime ) * 1000.0 * m_InvTicksPerSec;
    }
};

#endif//__S2_TIMER_H__
