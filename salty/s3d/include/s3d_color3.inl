//------------------------------------------------------------------------------
// File : s3d_color3.inl
// Desc : RGB Color Module.
// Copyright(c) Project Asura. All right reserved.
//------------------------------------------------------------------------------

#ifndef __S3D_COLOR3_INL__
#define __S3D_COLOR3_INL__

namespace s3d {

////////////////////////////////////////////////////////////////////////////////
// Color structure
////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------
//      コンストラクタです.
//------------------------------------------------------------------------------
S3D_INLINE
Color3::Color3()
{ /* DO_NOTHING */ }

//------------------------------------------------------------------------------
//      引数付きコンストラクタです.
//------------------------------------------------------------------------------
S3D_INLINE
Color3::Color3( const f64 nr, const f64 ng, const f64 nb )
: r( nr )
, g( ng )
, b( nb )
{ /* DO_NOTHING */ }

//------------------------------------------------------------------------------
//      コピーコンストラクタです.
//------------------------------------------------------------------------------
S3D_INLINE
Color3::Color3( const Color3& value )
: r( value.r )
, g( value.g )
, b( value.b )
{ /* DO_NOTHING */ }

//------------------------------------------------------------------------------
//      代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator = ( const Color3& value )
{
    r = value.r;
    g = value.g;
    b = value.b;
    return (*this);
}

//------------------------------------------------------------------------------
//      加算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator += ( const Color3& value )
{
    r += value.r;
    g += value.g;
    b += value.b;
    return (*this);
}

//------------------------------------------------------------------------------
//      減算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator -= ( const Color3& value )
{
    r -= value.r;
    g -= value.g;
    b -= value.b;
    return (*this);
}

//------------------------------------------------------------------------------
//      乗算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator *= ( const Color3& value )
{
    r *= value.r;
    g *= value.g;
    b *= value.b;
    return (*this);
}

//------------------------------------------------------------------------------
//      除算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator /= ( const Color3& value )
{
    r /= value.r;
    g /= value.g;
    b /= value.b;
    return (*this);
}

//------------------------------------------------------------------------------
//      乗算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator *= ( const f64 value )
{
    r *= value;
    g *= value;
    b *= value;
    return (*this);
}

//------------------------------------------------------------------------------
//      除算代入演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3& Color3::operator /= ( const f64 value )
{
    r /= value;
    g /= value;
    b /= value;
    return (*this);
}

//------------------------------------------------------------------------------
//      正符号演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator + () const
{ return (*this); }

//------------------------------------------------------------------------------
//      負符号演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator - () const
{ return Color3( -r, -g, -b ); }

//------------------------------------------------------------------------------
//      加算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator + ( const Color3& value ) const
{ return Color3( r + value.r, g + value.g, b + value.b ); }

//------------------------------------------------------------------------------
//      減算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator - ( const Color3& value ) const
{ return Color3( r - value.r, g - value.g, b - value.b ); }

//------------------------------------------------------------------------------
//      乗算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator * ( const Color3& value ) const
{ return Color3( r * value.r, g * value.g, b * value.b ); }

//------------------------------------------------------------------------------
//      除算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator / ( const Color3& value ) const
{ return Color3( r / value.r, g / value.g, b / value.b ); }

//------------------------------------------------------------------------------
//      乗算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator * ( const f64 value ) const
{ return Color3( r * value, g * value, b * value ); }

//------------------------------------------------------------------------------
//      除算演算子です.
//------------------------------------------------------------------------------
S3D_INLINE
Color3 Color3::operator / ( const f64 value ) const
{ return Color3( r / value, g / value, b / value ); }

//------------------------------------------------------------------------------
//      値を0.0~1.0に制限します.
//------------------------------------------------------------------------------
S3D_INLINE
void Color3::Clamp()
{
    if ( r > 1.0f )    { r = 1.0f; }
    if ( g > 1.0f )    { g = 1.0f; }
    if ( b > 1.0f )    { b = 1.0f; }
    
    if ( r < 0.0f )    { r = 0.0f; }
    if ( g < 0.0f )    { g = 0.0f; }
    if ( b < 0.0f )    { b = 0.0f; }
}

} // namespace s3d


#endif//__S3D_COLOR3_INL__