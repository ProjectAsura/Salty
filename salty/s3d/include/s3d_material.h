//----------------------------------------------------------------------------------
// File : s3d_material.
// Desc : Material Module.
// Copyright(c) Project Asura. All right reserved.
//----------------------------------------------------------------------------------

#ifndef __S3D_MATERIAL_H__
#define __S3D_MATERIAL_H__

//----------------------------------------------------------------------------------
// Includes
//----------------------------------------------------------------------------------
#include <s3d_shape.h>
#include <s3d_color3.h>


namespace s3d {

/////////////////////////////////////////////////////////////////////////////////////
// IMaterial interface
/////////////////////////////////////////////////////////////////////////////////////
struct IMaterial
{
public:
    virtual Color3 Shade( const Vector3&, const Vector3&, Vector3& ) = 0;
};


/////////////////////////////////////////////////////////////////////////////////////
// Matte class
// (Lambert)
/////////////////////////////////////////////////////////////////////////////////////
class Matte : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Matte( const Color3& );
    Matte( const Matte& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected varaibles.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Color;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Clay class
// (Oren-Nayer)
/////////////////////////////////////////////////////////////////////////////////////
class Clay : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Clay( const Color3&, const f64 );
    Clay( const Clay& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected varaibles.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Color;
    f64     m_Roughness;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Plastic class
// (Phong)
/////////////////////////////////////////////////////////////////////////////////////
class Plastic : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods
    //==============================================================================
    Plastic( const Color3&, const f64, IMaterial* );
    Plastic( const Plastic& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3      m_Color;
    f64         m_Power;
    IMaterial*  m_pDiffuse;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


/////////////////////////////////////////////////////////////////////////////////////
// Metal class
// (Cook-Torrance)
/////////////////////////////////////////////////////////////////////////////////////
class Metal : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Metal( const Color3&, const f64, const f64, IMaterial* );
    Metal( const Metal& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3      m_Color;
    f64         m_Roughness;
    f64         m_Fresnel;
    IMaterial*  m_pDiffuse;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


////////////////////////////////////////////////////////////////////////////////////
// Mirror class
////////////////////////////////////////////////////////////////////////////////////
class Mirror : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NOTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Mirror( const Color3&, const f64 );
    Mirror( const Mirror& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Color;
    f64     m_Reflectivity;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


////////////////////////////////////////////////////////////////////////////////////
// Glass class
////////////////////////////////////////////////////////////////////////////////////
class Glass : public IMaterial
{
    //==============================================================================
    // list of friend classes and methods.
    //==============================================================================
    /* NONTHING */

public:
    //==============================================================================
    // public variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // public methods.
    //==============================================================================
    Glass( const Color3&, const f64 );
    Glass( const Glass& );

    Color3 Shade( const Vector3&, const Vector3&, Vector3& );

protected:
    //==============================================================================
    // protected variables.
    //==============================================================================
    /* NOTHING */

    //==============================================================================
    // protected methods.
    //==============================================================================
    /* NOTHING */

private:
    //==============================================================================
    // private variables.
    //==============================================================================
    Color3  m_Color;
    f64     m_Refractivity;

    //==============================================================================
    // private methods.
    //==============================================================================
    /* NOTHING */
};


} // namespace s3d

#endif//__S3D_MATERIAL_H__
