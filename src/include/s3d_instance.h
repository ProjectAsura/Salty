//-------------------------------------------------------------------------------------------------
// File : s3d_instance.h
// Desc : Instance Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------

#ifndef __S3D_INSTANCE_H__
#define __S3D_INSTANCE_H__

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <s3d_shape.h>


namespace s3d {

///////////////////////////////////////////////////////////////////////////////////////////////////
// Instance class
///////////////////////////////////////////////////////////////////////////////////////////////////
class Instance : public IShape
{
    //=============================================================================================
    // list of friend classes and methods.
    //=============================================================================================
    /* NOTHING */

public:
    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // public methods.
    //=============================================================================================
    explicit Instance( const IShape* shape, const Matrix& world );
    virtual ~Instance();

    bool IsHit( const Ray& ray, HitRecord& record ) const override;
    bool IsPrimitive() const override;
    BoundingBox GetBox() const override;
    const IMaterial* GetMaterial() const override;
    Vector3 GetCenter() const override;

private:
    //=============================================================================================
    // private variables.
    //=============================================================================================
    const IShape*   m_pShape;
    Matrix          m_World;
    Matrix          m_InvWorld;
    BoundingBox     m_WorldBox;
    Vector3         m_WorldCenter;

    //=============================================================================================
    // private methods.
    //=============================================================================================
    /* NOTHING */
};


} // namespace s3d

#endif//__S3D_INSTANCE_H__
