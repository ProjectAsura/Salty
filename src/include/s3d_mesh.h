//----------------------------------------------------------------------------------------
// File : s3d_mesh.h
// Desc : Mesh Module.
// Copyright(c) Project Asura. All right reserved.
//----------------------------------------------------------------------------------------
#pragma once

//----------------------------------------------------------------------------------------
// Includes
//----------------------------------------------------------------------------------------
#include <vector>
#include <s3d_math.h>
#include <s3d_shape.h>
#include <s3d_material.h>


namespace s3d {

/////////////////////////////////////////////////////////////////////////////////////////
// Mesh structure
/////////////////////////////////////////////////////////////////////////////////////////
class Mesh : public IShape
{
public:
    //==================================================================================
    // public variables.
    //==================================================================================
    /* NOTHING */

    //==================================================================================
    // public methods.
    //==================================================================================

    //----------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //----------------------------------------------------------------------------------
    Mesh();

    //----------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //----------------------------------------------------------------------------------
    virtual ~Mesh();

    //----------------------------------------------------------------------------------
    //! @brief      ファイルからロードします.
    //----------------------------------------------------------------------------------
    bool LoadFromFile( const char* filename );

    //----------------------------------------------------------------------------------
    //! @brief      メモリ解放処理を行います.
    //----------------------------------------------------------------------------------
    void Release();

    //----------------------------------------------------------------------------------
    //! @brief      交差判定します.
    //----------------------------------------------------------------------------------
    bool IsHit(const Ray&, HitRecord&) const;

    //----------------------------------------------------------------------------------
    //! @brief      バウンディングボックスを取得します.
    //----------------------------------------------------------------------------------
    BoundingBox GetBox() const;

    //----------------------------------------------------------------------------------
    //! @brief      中心座標を取得します.
    //----------------------------------------------------------------------------------
    Vector3 GetCenter() const;

    //----------------------------------------------------------------------------------
    //! @brief      基本図形かどうか判定します.
    //----------------------------------------------------------------------------------
    bool IsPrimitive() const;

protected:
    //==================================================================================
    // protected variables.
    //==================================================================================
    /* NOTHING */

    //==================================================================================
    // protected methods.
    //==================================================================================
    /* NOTHING */

private:
    //==================================================================================
    // private variables.
    //==================================================================================
    TextureSampler              m_DiffuseSmp;       //!< ディフューズマップのサンプラーです.
    TextureSampler              m_SpecularSmp;      //!< スペキュラーマップのサンプラーです.
    IShape*                     m_pBVH;             //!< BVHです.
    Vector3                     m_Center;           //!< 中心座標.
    std::vector<IShape*>        m_Triangles;
    std::vector<IMaterial*>     m_Materials;
    std::vector<Texture2D>      m_Textures;

    //==================================================================================
    // private methods.
    //==================================================================================
    Mesh            ( const Mesh& ) = delete;
    void operator = ( const Mesh& ) = delete;
};


} // namespace s3d
