//-------------------------------------------------------------------------------------------
// File : s3d_ibl.cpp
// Desc : Image Based Lighting Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------
#include <s3d_ibl.h>
#include <s3d_hdr.h>


namespace s3d {

/////////////////////////////////////////////////////////////////////////////////////////////
// IBL class
/////////////////////////////////////////////////////////////////////////////////////////////

//-------------------------------------------------------------------------------------------
//      コンストラクタです.
//-------------------------------------------------------------------------------------------
IBL::IBL()
: m_Width   ( 0 )
, m_Height  ( 0 )
, m_Gamma   ( 0.0f )
, m_Exposure( 0.0f )
, m_pPixels ( nullptr )
{ /* DO_NOTHING */ }

//-------------------------------------------------------------------------------------------
//      デストラクタです.
//-------------------------------------------------------------------------------------------
IBL::~IBL()
{ /* DO_NOTHING */ }

//-------------------------------------------------------------------------------------------
//      初期化処理を行います.
//-------------------------------------------------------------------------------------------
bool IBL::Init( const char* filename )
{
    return LoadFromHDR( filename, m_Width, m_Height, m_Gamma, m_Exposure, &m_pPixels );
}

//-------------------------------------------------------------------------------------------
//      終了処理を行います.
//-------------------------------------------------------------------------------------------
void IBL::Term()
{
    SafeDeleteArray( m_pPixels );
    m_Width    = 0;
    m_Height   = 0;
    m_Gamma    = 0.0f;
    m_Exposure = 0.0f;
}

//-------------------------------------------------------------------------------------------
//      フェッチします.
//-------------------------------------------------------------------------------------------
Color IBL::Sample( const Vector3& dir )
{
    f32 u = 0.0f;
    const auto theta = acosf( dir.y );
    const auto v = theta / F_PI;

    if ( !IsZero(dir.x) )
    {
        auto phi = acosf( dir.x / sqrtf( dir.x * dir.x + dir.z * dir.z ) );
        if ( dir.z < 0.0f )
            phi += F_2PI;
        u = phi / F_2PI;
    }

    const auto x = s32( u * m_Width  ) % m_Width;
    const auto y = s32( v * m_Height ) % m_Height;

    auto idx =  y * m_Width * 3 + x * 3;
    return Color( 
        m_pPixels[ idx + 0 ],
        m_pPixels[ idx + 1 ],
        m_pPixels[ idx + 2 ] );
}

} // namespace s3d
